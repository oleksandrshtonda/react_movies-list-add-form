{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","theme","_jsxs","className","concat","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","_ref$required","required","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","clearFields","onSubmit","packedMovie","packMovie","callback","preventDefault","handlerSubmit","disabled","Header","changeTheme","onClick","App","_toConsumableArray","moviesFromServer","setMovies","setTheme","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a9fd348.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n  theme: string;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie, theme }) => (\n  <div className={`card card--${theme}`} data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n  theme: string;\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies, theme }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n        theme={theme}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport './TextField.scss';\nimport React, { useState } from 'react';\n\ntype Props = {\n  theme: string,\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  theme,\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState<boolean>(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className={`label label--${theme}`} htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          },\n          `input--${theme}`)}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  theme: string;\n  onAdd: (movie: Movie) => void;\n}\n\ntype PackMovie = (\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n) => {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\nconst packMovie: PackMovie = (\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n  imdbId,\n) => {\n  return {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n};\n\nconst handlerSubmit = (\n  packedMovie: Movie,\n  callback: (movie: Movie) => void,\n  event: React.FormEvent,\n  count: number,\n  setCount: React.Dispatch<React.SetStateAction<number>>,\n  clearFields: () => void,\n): void => {\n  event.preventDefault();\n  setCount(count + 1);\n\n  callback(packedMovie);\n  clearFields();\n};\n\nexport const NewMovie: React.FC<Props> = ({ theme, onAdd }) => {\n  const [count, setCount] = useState<number>(0);\n\n  const [title, setTitle] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [imdbUrl, setImdbUrl] = useState<string>('');\n  const [imdbId, setImdbId] = useState<string>('');\n\n  const checkFields = () => !(title && imgUrl && imdbUrl && imdbId);\n\n  const clearFields = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => {\n        const packedMovie = packMovie(\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        );\n\n        handlerSubmit(\n          packedMovie,\n          onAdd,\n          event,\n          count,\n          setCount,\n          clearFields,\n        );\n      }}\n    >\n      <h2 className={`title title--${theme}`}>Add a movie</h2>\n\n      <TextField\n        theme={theme}\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        theme={theme}\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        theme={theme}\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        theme={theme}\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        theme={theme}\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={checkFields()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './Header.scss';\n\ninterface Props {\n  changeTheme: () => void;\n  theme: string;\n}\n\nexport const Header: React.FC<Props> = ({ changeTheme, theme }) => {\n  return (\n    <header className={`header header--${theme}`}>\n      <span className={`logo logo--${theme}`}>MoviesHub</span>\n      <button\n        className={`change-theme-btn change-theme-btn--${theme}`}\n        type=\"button\"\n        onClick={changeTheme}\n      >\n        THEME\n      </button>\n    </header>\n  );\n};\n","import { useState } from 'react';\nimport moviesFromServer from './api/movies.json';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Header } from './components/Header';\n\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([...moviesFromServer]);\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\n\n  const addMovie = (movie: Movie): void => {\n    setMovies([...movies, movie]);\n  };\n\n  const changeTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <div className={`page page--${theme}`}>\n\n      <Header\n        changeTheme={changeTheme}\n        theme={theme}\n      />\n\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n          theme={theme}\n        />\n      </div>\n\n      <div className={`sidebar sidebar--${theme}`}>\n        <NewMovie\n          theme={theme}\n          onAdd={(movie) => addMovie(movie)}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}